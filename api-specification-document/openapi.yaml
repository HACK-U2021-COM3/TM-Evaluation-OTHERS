openapi: 3.0.0
info:
  version: 1.0.0
  title: Ti.Me.EvaluationAPI
  description: "APIサーバーでの値の引き渡し、静的ファイル系はフロントで完結。"
tags:
  - name: point
  - name: user
  - name: past-plans

paths:
  /search:
    get:
      summary: 場所候補の検索
      description: ユーザーが文字列検索をし、場所の複数候補を受け取る
      tags:
        - point
      parameters:
        - in: query
          name: query-place
          schema: 
            type: string
          description: 入力した地名(場所名)
      responses:
        '200':
          description: "検索結果が1件以上の場合"
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/SearchGetResponse"
        default:
          description: "検索候補が0件の場合 or 検索候補が10件より上の場合 などのエラー"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /measure:
    get:
      summary: 地点もとに計測
      description: 地点もとに時間と距離を計測して返す。=> 時間と距離の計測と描画は非同期でええな。
      tags:
        - point
      requestBody:
        description: "地点の配列"
        content: 
          application/json:
            schema:
              $ref: "#/components/schemas/MeasureGetRequest"
      responses:
        '200':
          description: "検索結果が1件以上の場合"
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/MeasureGetResponse"
        default:
          description: "地点の配列が0,1件の場合などのエラー ex) 削除して検索"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  
  /signup:
    post:
      summary: ソーシャル認証によるサインアップ
      description: IDトークンがリクエストされ、そこから検証をしユーザーを登録して201を返す。
      tags:
        - user
      parameters:
      - in: header
        name: id-token
        required: true
        description: "認証トークン"
        schema:
          type: string
      responses:
        '201':
          description: "ユーザーのIDトークンが認証された時"
        default:
          description: "認証に失敗した時"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /past-plans/create:
    post:
      summary: 測定した予定の保存
      description: 測定した予定をユーザーに紐づいた形でDBに保存する。
      tags:
        - past-plans
      parameters:
      - in: header
        name: id-token
        required: true
        description: "認証トークン"
        schema:
          type: string
      requestBody:
        description: "過去の予定群"
        content: 
          application/json:
            schema:
              $ref: "#/components/schemas/PastPlansCreatePostRequest"
      responses:
        '201':
          description: "測定した予定の保存に成功した時"
        default:
          description: "保存に失敗した時"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  
  /past-plans/index:
    get:
      summary: 測定した予定の保存
      description: 測定した予定をユーザーに紐づいた形でDBに保存する。
      tags:
        - past-plans
      parameters:
      - in: header
        name: id-token
        required: true
        description: "認証トークン"
        schema:
          type: string
      requestBody:
        description: "参照するためのユーザーID"
        content: 
          application/json:
            schema:
              $ref: "#/components/schemas/PastPlansIndexGetRequest"
      responses:
        '200':
          description: "ユーザーIDから1件以上の過去の予定の取得に成功した時"
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/PastPlansIndexGetResponse"
        default:
          description: "0件であった場合"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"


  /past-plans/{plans-id}/show:
    get:
      summary: 個別の予定の詳細の表示
      description: 予定一覧から個別の予定の詳細の表示を行う
      tags:
        - past-plans
      parameters:
      - in: header
        name: id-token
        required: true
        description: "認証トークン"
        schema:
          type: string
      - name: plans-id
        in: path
        required: true
        description: ユーザーが参照する個別の過去の予定ID
        schema: 
          type: string
      requestBody:
        description: "参照するためのユーザーIDと指定した過去の予定のID"
        content: 
          application/json:
            schema:
              $ref: "#/components/schemas/PastPlansShowGetRequest"
      responses:
        '200':
          description: "ユーザーIDから1件以上の過去の予定の取得に成功した時"
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/PastPlansShowGetResponse"
        default:
          description: "0件であった場合"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"




  /past-plans/{plans-id}/update:
    put:
      summary: 測定した予定の保存
      description: 測定した予定をユーザーに紐づいた形でDBに保存する。
      tags:
        - past-plans
      parameters:
      - in: header
        name: id-token
        required: true
        description: "認証トークン"
        schema:
          type: string
      - name: plans-id
        in: path
        required: true
        description: ユーザーが参照する個別の過去の予定ID
        schema: 
          type: string
      requestBody:
        description: "データの更新内容"
        content: 
          application/json:
            schema:
              $ref: "#/components/schemas/PastPlansIdUpdateRequest"
      responses:
        '204':
          description: "データの更新に成功した時"
        default:
          description: "データの更新に失敗した時"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"


  /past-plans/{plans-id}/delete:
    delete:
      summary: 測定した予定の保存
      description: 測定した予定をユーザーに紐づいた形でDBに保存する。
      tags:
        - past-plans
      parameters:
      - in: header
        name: id-token
        required: true
        description: "認証トークン"
        schema:
          type: string
      - name: plans-id
        in: path
        required: true
        description: ユーザーが参照する個別の過去の予定ID
        schema: 
          type: string
      requestBody:
        description: "削除するためのユーザーIDと指定した過去の予定のID"
        content: 
          application/json:
            schema:
              $ref: "#/components/schemas/PastPlansIdDeleteRequest"
      responses:
        '204':
          description: "データの削除に成功した時"
        default:
          description: "データの削除に失敗した時"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"



components:
  schemas:
    SearchGetResponse:
      type: object
      required:
        - results
      properties:
        results:
          type: array
          items:
            type: object
            required:
              - location
              - address
              - name
            properties:
              location:
                type: object
                required:
                - lat
                - lng
                properties:
                  lat:
                  # 小数点
                    type: number
                  lng:
                    type: number
              address:
                type: string
              name:
                type: string

    MeasureGetRequest:
      type: object
      required:
        - from
        - to
        - waypoints
      properties:
        from:
          type: string
        to: 
          type: string
        waypoints:
          type: array
          items:
            type: object
            required:
              - point
              - order
            properties:
              point:
                type: string
              order:
                type: integer 


    MeasureGetResponse:
      type: object
      required:
        - results
      properties:
        results:
          type: array
          items:
            type: object
            required:
              - start_location
              - end_location
              - start_address
              - end_address
              - distance
              - duration
              - routes_points
            properties:
              start_location:
                type: object
                required:
                - lat
                - lng
                properties:
                  lat:
                  # 小数点
                    type: number
                  lng:
                    type: number
              end_location:
                type: object
                required:
                - lat
                - lng
                properties:
                  lat:
                  # 小数点
                    type: number
                  lng:
                    type: number
              start_address:
                type: string
              end_address:
                type: string
              distance:
                type: integer
              duration:
                type: integer
              routes_points:
                type: array
                items:
                  type: string



    PastPlansCreatePostRequest:
      type: object
      required:
    
    PastPlansIndexGetRequest:
      type: object
      required:
    
    PastPlansIndexGetResponse:
      type: object
      required:
    
    PastPlansShowGetRequest:
      type: object
      required:

    PastPlansShowGetResponse:
      type: object
      required:
    
    PastPlansIdUpdateRequest:
      type: object
      required:

    PastPlansIdDeleteRequest:
      type: object
      required:

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string